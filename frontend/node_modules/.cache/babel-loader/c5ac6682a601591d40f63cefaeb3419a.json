{"ast":null,"code":"var _jsxFileName = \"/Users/akd/Github/chatbot-node/frontend/src/Chat.js\";\nimport React, { Component } from 'react';\nimport YveBot from 'yve-bot/ui';\nimport 'yve-bot/ext/types/StringSearch';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.sendCustomQuery = async query => {\n      const {\n        ssoid,\n        modality\n      } = this.state;\n      try {\n        await axios.post('http://localhost:5000/send-email', {\n          ssoid,\n          modality,\n          query\n        });\n        this.bot.say('Your query has been sent!');\n      } catch (error) {\n        this.bot.say('There was an error sending your query.');\n        console.error('Error sending email:', error);\n      }\n    };\n    this.bot = new YveBot(props.rules || [], {\n      target: '.Chat'\n    });\n    this.state = {\n      ssoid: '',\n      modality: ''\n    };\n    this.bot.on('message', async message => {\n      if (message.name === 'ssoid') {\n        this.setState({\n          ssoid: message.value\n        });\n      } else if (message.name === 'modality') {\n        this.setState({\n          modality: message.value\n        });\n      } else if (message.name === 'query') {\n        await this.sendCustomQuery(message.value);\n      }\n    });\n  }\n  componentDidMount() {\n    this.bot.start();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Chat;","map":{"version":3,"names":["React","Component","YveBot","axios","jsxDEV","_jsxDEV","Chat","constructor","props","sendCustomQuery","query","ssoid","modality","state","post","bot","say","error","console","rules","target","on","message","name","setState","value","componentDidMount","start","render","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/akd/Github/chatbot-node/frontend/src/Chat.js"],"sourcesContent":["import React, { Component } from 'react';\nimport YveBot from 'yve-bot/ui';\nimport 'yve-bot/ext/types/StringSearch';\nimport axios from 'axios';\nimport './Chat.css';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.bot = new YveBot(props.rules || [], {\n      target: '.Chat',\n    });\n\n    this.state = {\n      ssoid: '',\n      modality: '',\n    };\n\n    this.bot.on('message', async (message) => {\n      if (message.name === 'ssoid') {\n        this.setState({ ssoid: message.value });\n      } else if (message.name === 'modality') {\n        this.setState({ modality: message.value });\n      } else if (message.name === 'query') {\n        await this.sendCustomQuery(message.value);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.bot.start();\n  }\n\n  sendCustomQuery = async (query) => {\n    const { ssoid, modality } = this.state;\n    try {\n      await axios.post('http://localhost:5000/send-email', {\n        ssoid,\n        modality,\n        query\n      });\n      this.bot.say('Your query has been sent!');\n    } catch (error) {\n      this.bot.say('There was an error sending your query.');\n      console.error('Error sending email:', error);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Chat\" />\n    );\n  }\n}\n\nexport default Chat;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAO,gCAAgC;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,SAASL,SAAS,CAAC;EAC3BM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KA0BfC,eAAe,GAAG,MAAOC,KAAK,IAAK;MACjC,MAAM;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK;MACtC,IAAI;QACF,MAAMV,KAAK,CAACW,IAAI,CAAC,kCAAkC,EAAE;UACnDH,KAAK;UACLC,QAAQ;UACRF;QACF,CAAC,CAAC;QACF,IAAI,CAACK,GAAG,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,IAAI,CAACF,GAAG,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACtDE,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IArCC,IAAI,CAACF,GAAG,GAAG,IAAIb,MAAM,CAACM,KAAK,CAACW,KAAK,IAAI,EAAE,EAAE;MACvCC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACP,KAAK,GAAG;MACXF,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IAED,IAAI,CAACG,GAAG,CAACM,EAAE,CAAC,SAAS,EAAE,MAAOC,OAAO,IAAK;MACxC,IAAIA,OAAO,CAACC,IAAI,KAAK,OAAO,EAAE;QAC5B,IAAI,CAACC,QAAQ,CAAC;UAAEb,KAAK,EAAEW,OAAO,CAACG;QAAM,CAAC,CAAC;MACzC,CAAC,MAAM,IAAIH,OAAO,CAACC,IAAI,KAAK,UAAU,EAAE;QACtC,IAAI,CAACC,QAAQ,CAAC;UAAEZ,QAAQ,EAAEU,OAAO,CAACG;QAAM,CAAC,CAAC;MAC5C,CAAC,MAAM,IAAIH,OAAO,CAACC,IAAI,KAAK,OAAO,EAAE;QACnC,MAAM,IAAI,CAACd,eAAe,CAACa,OAAO,CAACG,KAAK,CAAC;MAC3C;IACF,CAAC,CAAC;EACJ;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACX,GAAG,CAACY,KAAK,CAAC,CAAC;EAClB;EAiBAC,MAAMA,CAAA,EAAG;IACP,oBACEvB,OAAA;MAAKwB,SAAS,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAE5B;AACF;AAEA,eAAe3B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}